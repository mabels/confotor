import 'dart:async';
import 'dart:convert';
import 'dart:io';

import 'package:barcode_scan/barcode_scan.dart';
import 'package:confotor/ticket-and-checkins.dart';
import 'package:confotor/ticket-store.dart';
import 'package:http/http.dart' as http;
import 'package:meta/meta.dart';
// import 'package:flutter/material.dart';
import 'package:path/path.dart';
import 'package:path_provider/path_provider.dart';
// import 'package:flutter/services.dart';
import './confotor-app.dart';
import './ticket.dart';
import './tickets.dart';

import 'check-in-agent.dart';
import 'confotor-msg.dart';

class CheckInListItem extends CheckInListMsg {
  String url;
  String event_title;
  String expires_at;
  String expires_at_timestamp;
  String tickets_url;
  String checkin_list_url;
  String sync_url;
  int total_pages;
  int total_entries;

  TicketStore ticketStore;

  static Future<CheckInListItem> fetch(String url) async {
    var response = await http.get(url);
    if (200 <= response.statusCode && response.statusCode < 300) {
      var jsonResponse = json.decode(response.body);
      return CheckInListItem.create(url, jsonResponse);
    }
    throw new Exception('CheckInListItem:fetch:$url');
  }

  static CheckInListItem create(String url, dynamic json) {
    var checkInList = new CheckInListItem();
    checkInList.url = url;
    checkInList.event_title = json['event_title'];
    checkInList.expires_at = json['expires_at'];
    checkInList.expires_at_timestamp = json['expires_at_timestamp'];
    checkInList.tickets_url = json['tickets_url'];
    checkInList.checkin_list_url = json['checkin_list_url'];
    checkInList.sync_url = json['sync_url'];
    checkInList.total_pages = json['total_pages'];
    checkInList.total_entries = json['total_entries'];
    checkInList.ticketStore.fromJson(json['tickets']);

    return checkInList;
  }

  get shortEventTitle {
    return event_title.split(" ").first;
  }

}

  String get jsonTicketStatus {
    switch (this.ticketsStatus) {
      case CheckInListItemTicketsStatus.Initial:
        return 'Initial';
      case CheckInListItemTicketsStatus.Fetched:
        return 'Fetched';
    }
  }

  Map<String, dynamic> toJson() {
    List<TicketAndCheckIns> my = ticketAndCheckIns.values.toList();
    // print('toJson:${ticketAndCheckIns.length}');
    // ticketAndheckIns = [];
    return {
        "url": url,
        "event_title": event_title,
        "expires_at": expires_at,
        "expires_at_timestamp": expires_at_timestamp,
        "tickets_url": tickets_url,
        "checkin_list_url": checkin_list_url,
        "sync_url": sync_url,
        "total_pages": total_pages,
        "total_entries": total_entries,
        "ticketsStatus": jsonTicketStatus,
        "tickets": my
      };
  }

  String get listId {
    final url = Uri.parse(this.tickets_url);
    return basename(dirname(url.path));
  }

  String ticketsUrl(int page) {
    // https://ti.to/jsconfeu/jsconf-eu-x-2019/checkin_lists/hello/tickets.json
    return 'https://checkin.tito.io/checkin_lists/$listId/tickets?page=$page';
  }

  String checkInUrl({since: 0, page: 0}) {
    return 'https://checkin.tito.io/checkin_lists/$listId/checkins?since=$since&page=$page';
  }

  String checkOutUrl(String uuid) {
    return "https://checkin.tito.io/checkin_lists/$listId/checkins/$uuid";
  }
}

Future<String> getLocalPath() async {
  final directory = await getApplicationDocumentsDirectory();
  return directory.path;
}
